import telebot
import requests
import json
import datetime

print("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ê–≤—Ç–æ–±—É—Å–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä (by Kostz)")

API_TOKEN = '–≤–∞—à —Ç–æ–∫–µ–Ω'
ALLOWED_CHAT_IDS = [id, id, id]

bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.chat.id in ALLOWED_CHAT_IDS:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(telebot.types.KeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å (–≤–∞—à–∞ –æ—Å–∞–Ω–æ–≤–∫–∞) üöå"))
        markup.add(telebot.types.KeyboardButton("–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å (–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞) üöå"))
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é:', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.')


@bot.message_handler(func=lambda message: message.text == "–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å (–≤–∞—à–∞ –æ—Å–∞–Ω–æ–≤–∫–∞) üöå")
def avtobus_school(message):
    if message.chat.id in ALLOWED_CHAT_IDS:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, '–í–æ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∞–≤—Ç–æ–±—É—Å—ã:', reply_markup=markup)

        url = 'https://moscowtransport.app/–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞'
        headers = {
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36',
            'Service-Name':'transport',
            'Access-Control-Allow-Methods':'GET,POST,PATCH,PUT,DELETE,OPTIONS',
            'Access-Control-Allow-Origin':'*',
            'Access-Control-Request-Header':'XAuthToken,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range',
            'Method-Name':'transport_stop_v2_card'
        }

        params = {}
        r = requests.get(url, params=params, headers = headers)

        js = json.loads(r.text)

        for item in js['routePath']:
            times = ''
            if item['number'] == '944' or item['number'] == '926':
                for bus in item['externalForecast']:
                    tmin = bus['time'] // 60
                    tsec = bus['time'] % 60
                    times = times + '\nüïò '+str(tmin) + ' –º–∏–Ω—É—Ç(—ã)  ' + str(tsec)+' —Å–µ–∫—É–Ω–¥(—ã)'
                bot.send_message(message.chat.id, ('üöå' + item['number']))
                bot.send_message(message.chat.id, (times))
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.message_handler(func=lambda message: message.text == "–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å (–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞) üöå")
def avtobus_sevostopol(message):
    if message.chat.id in ALLOWED_CHAT_IDS:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, '–í–æ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∞–≤—Ç–æ–±—É—Å—ã:', reply_markup=markup)

        url = 'https://moscowtransport.app/–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞'
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0',
            'Service-Name':'transport',
            'Access-Control-Allow-Methods':'GET,POST,PATCH,PUT,DELETE,OPTIONS',
            'Access-Control-Allow-Origin':'*',
            'Access-Control-Request-Header':'XAuthToken,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range',
            'Method-Name':'transport_stop_v2_card',
            'Server':'nginx'
        }

        params = {}
        r = requests.get(url, params=params, headers = headers)

        js = json.loads(r.text)

        for item in js['routePath']:
            times = ''
            if item['number'] == '944' or item['number'] == '926':
                for bus in item['externalForecast']:
                    tmin = bus['time'] // 60
                    tsec = bus['time'] % 60
                    times = times + '\nüïò '+str(tmin) + ' –º–∏–Ω—É—Ç(—ã)  ' + str(tsec)+' —Å–µ–∫—É–Ω–¥(—ã)'
                bot.send_message(message.chat.id, ('üöå' + item['number']))
                bot.send_message(message.chat.id, (times))
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')

@bot.message_handler(func=lambda message: message.text == "–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å (–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞) üöå")
def avtobus_school(message):
    if message.chat.id in ALLOWED_CHAT_IDS:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id, '–í–æ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∞–≤—Ç–æ–±—É—Å—ã:', reply_markup=markup)

        url = 'https://moscowtransport.app/–≤–∞—à–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞'
        headers = {
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36',
            'Service-Name':'transport',
            'Access-Control-Allow-Methods':'GET,POST,PATCH,PUT,DELETE,OPTIONS',
            'Access-Control-Allow-Origin':'*',
            'Access-Control-Request-Header':'XAuthToken,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range',
            'Method-Name':'transport_stop_v2_card'
        }

        params = {}
        r = requests.get(url, params=params, headers = headers)

        js = json.loads(r.text)

        for item in js['routePath']:
            times = ''
            for bus in item['externalForecast']:
                tmin = bus['time'] // 60
                tsec = bus['time'] % 60
                times += f'\nüïò {tmin} –º–∏–Ω—É—Ç(—ã) {tsec} —Å–µ–∫—É–Ω–¥(—ã)'

            if times.strip():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ times –Ω–µ –ø—É—Å—Ç–∞—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
                bot.send_message(message.chat.id, f'üöå {item["number"]}')  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
                bot.send_message(message.chat.id, times)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏
            else:
                bot.send_message(message.chat.id, f'üöå {item["number"]}')
                bot.send_message(message.chat.id, '–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è')
    else:
        bot.send_message(message.chat.id, '–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è')

bot.polling()
